/**
 * Post-it digitalization API
 * Post-it digitalization API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: muellerobin95@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.apis

import io.swagger.client.models.PostIt

import io.swagger.client.infrastructure.*

class DefaultApi(basePath: kotlin.String = "https://virtserver.swaggerhub.com/RobinTTYTeam/AppliedAI/1.0.0") : ApiClient(basePath) {

    /**
     * Detects Post-it notes and digitalizes their contents
     * By passing in the appropriate options, you can digitalize the contents of Post-it notes 
     * @param body Picture containing the Post-it notes to digitalize. Only required if no query parameter is provided. 
     * @param pictureLink A link to the picture to be digitalized. Only required if no request body is provided. 
     * @return kotlin.Array<PostIt>
     */
    @Suppress("UNCHECKED_CAST")
    fun indexPostIts(body: Object, pictureLink: kotlin.String): kotlin.Array<PostIt> {
        val localVariableBody: kotlin.Any? = body
        val localVariableQuery: MultiValueMap = mapOf("pictureLink" to listOf("$pictureLink"))
        val localVariableConfig = RequestConfig(
                RequestMethod.POST,
                "/indexPostIts", query = localVariableQuery
        )
        val response = request<kotlin.Array<PostIt>>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<PostIt>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
}
